@use "colors" as *;



@mixin header {
  height: 100%;
  width: 21vw;
  font-size: clamp(1.25rem, 4vw, 8vh);
  background-color: hsl(210, 33%, 10%);
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  border-radius: clamp(3vh,20%, 20vw) clamp(3vh,20%, 60vw) 0 0;
  border: 1px solid white;
  border-bottom: 1px solid hsl(210, 33%, 10%);
  box-shadow: 0 0 .5rem 0 black;
  z-index: 7003;
  cursor: pointer;
  & h1 {
    margin: 0;
  }
  &.current, &:hover {
    background-color: hsl(210, 33%, 20%);
  }
}




@mixin radioBtn {
  .radioBtnOn, .radioBtnOff, .radioBtnHalf {
    background-color: $lighter-grey;
    
    display: flex;
    height: 2rem;
    width: clamp(4rem, 20vw, 12rem);
    border-radius: 2rem;
    cursor: pointer;
    
  }
  
  .radioBtnOn {
    & .radioBtnCircle {
      transform: translateX(clamp(2rem, 20vw - 2rem, 10rem));
      background-color: white;
    }
  }

  .radioBtnOff {
    & .radioBtnCircle {
      transform: translateX(0);
      background-color: hsl(0deg, 0%, 30%);
    }
  }
  
  .radioBtnHalf {
    & .radioBtnCircle {
      transform: translateX(clamp(1rem, 10vw - 1rem, 5rem));
      background-color: hsl(0deg, 0%, 60%);
    }
  }
  
  .radioBtnCircle {
    transition: transform .5s ease-in-out;
    transform: translateX(0);
    aspect-ratio: 1;
    height: 100%;
    border-radius: 999%;
  }
}





@mixin menu($columns: 1) {
  .menu {
    position: absolute;
    bottom: 0;
    display: grid;
    grid-template-columns: 1fr;
    grid-auto-rows: 10vh 36vh;
    width: 100%;
    transform: translateY(46vh);
    transition: transform .5s ease-in-out;
    z-index: 6000;
    &.open {
      transform: translateY(0);
      transition: transform .5s ease-in-out;
    }
  
    &.shown {
      z-index: 7000;
    }
    
    & *{
      text-transform: capitalize;
    }
  }
  
  .tabs {
    background-color: $grey;
    height: 100%;
    border-top: 1px solid white;
    border-bottom: 1px solid white;
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: 1fr;
  }
  
  .tab {
    display: flex;
    height: 100%;
    justify-content: center;
    align-items: center;
    font-size: clamp(1.15rem, 2.5vw, 6vh);
    cursor: pointer;
    text-align: center;
    &.current {
      background-color: $lighter-grey;
    }
  
    &:not(:nth-child(#{$columns})) {
      border-right: 1px solid white;
    }
  
  }

  .statsTab {
    font-size: clamp(1.25rem, 2.5vw, 6vh);

  }
  
  .tabContent {
    background-color: $grey;
    height: 100%;
    width: 100%;
    display: grid;
    @if($columns == 4){
      grid-template-columns: repeat(auto-fill, 25vw);
    }@else if($columns == 3){
      grid-template-columns: repeat(auto-fill, 33.33vw);
    }@else if($columns == 2){
      grid-template-columns: repeat(auto-fill, 50vw);
    }@else if($columns == 1){
      grid-template-columns: 100vw;
    }@else{
      grid-template-columns: repeat(auto-fill, 25vw);
    }
    grid-template-rows: 1fr;
  }

  .setting {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: center;
    padding: 1rem 2rem;
    &:not(:last-of-type) {
      border-right: 1px solid white;
    }
    & h3 {
      padding-bottom: 2rem;
    }
  }

  @media (max-width: 820px) {
    .menu {
      bottom: 4rem;
      
      &.open{
        grid-auto-rows: 6vh calc(40vh + 4rem);
        transform: translateY(4rem);
      }
      
      &:not(.open) {
        ::after {
          content: '';
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          background-color: $grey;
          opacity: 1;
          transition: opacity .5s ease-in-out;
        }
      }
    }
  }
}